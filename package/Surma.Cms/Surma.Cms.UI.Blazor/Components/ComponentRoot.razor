@inherits ComponentBase

<CascadingValue Value="this">
    <div class="@($"ComponentRoot {ComponentName}")">
        @ChildContent
    </div>
</CascadingValue>

@code {
    [Parameter]
    public RenderFragment ChildContent { get; set; }
    
    [Parameter]
    public Type? CompontentType { get; set; }

    [CascadingParameter] 
    private ComponentRoot? ParentComponent { get; set; }
    
    public List<string> Children { get; set; } = new List<string>();
    
    public string ComponentRootId { get; set; }
    
    public string ComponentName { get; set; }
    
    protected override void OnInitialized()
    {
        ComponentName = CompontentType?.Name ?? ChildContent.GetType().Name;
        ComponentRootId = $"{ComponentName}:{ComponentRootId}";
        Console.WriteLine($"{ComponentRootId} {ChildContent.GetType()} {DateTime.UtcNow.Ticks}");
        base.OnInitialized();
    }
    
    public void AddChild(string childId)
    {
        ParentComponent?.AddChild(childId);
        Children.Add(childId);
    }
    
    public void RemoveChild(string childId)
    {
        ParentComponent?.RemoveChild(childId);
        Children.Remove(childId);
    }
}